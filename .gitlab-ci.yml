image: "unityci/editor:2022.3.11f1-base-2.0.0"

variables:
  REGISTRY_PROJECT_ID: "51392417"

stages:
- build
# - test
- trigger
- publish
- release

default:
  before_script:
    - VERSION=${CI_COMMIT_TAG}
    - "[ -z \"$VERSION\" ] && VERSION=0.0.${CI_PIPELINE_IID}"
    - export VERSION

build:
  stage: build
  script: 
    - "[ -z \"${CI_COMMIT_TAG}\" ] || scripts/check_version.sh ${CI_COMMIT_TAG}"
    - apt-get -qq update && apt-get -qq install unzip
    - sed -i "s/PROJECT_ID/${REGISTRY_PROJECT_ID}/g" Packages/*inhumate*/package.json
    - scripts/ci-before-script.sh
    # - scripts/get_protobuf.sh
    # - scripts/generate.sh
    - scripts/build.sh
  cache:
    key: "${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}"
    paths:
     - "Library/"
     - "protobuf/"
  artifacts:
    paths:
      - Build/*.tgz
    expire_in: 1 week

# test:
#   stage: test
#   script:
#     - chmod +x scripts/ci-before-script.sh && scripts/ci-before-script.sh
#     - chmod +x scripts/generate.sh && scripts/generate.sh
#     - chmod +x scripts/test.sh && scripts/test.sh
#   artifacts:
#     reports:
#       junit: "TestResults/*junit.xml"

# trigger:
#   stage: trigger
#   trigger: inhumate/unity/integrationtest
#   only:
#     - master
#     - main

# release:
#   stage: release
#   image: python:latest
#   only:
#     - tags
#   variables:
#     GIT_STRATEGY: none
#     S3_BUCKET: release.inhumatesystems.com
#     S3_URL: s3.eu-north-1.amazonaws.com
#   dependencies:
#     - build
#   script:
#     - pip install awscli
#     - "curl -X POST --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \
#       -d tag_name=${VERSION} \
#       -d description=\"Version ${VERSION}\" \
#       https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/releases"
#     - "for file in $(find . -type f); do \
#         aws s3 cp $file s3://${S3_BUCKET}/unity/ ; \
#         curl -X POST --header \"PRIVATE-TOKEN: ${PRIVATE_TOKEN}\" \
#             -d name=\"$(basename $file)\" \
#             -d url=\"https://${S3_URL}/${S3_BUCKET}/unity/$(basename $file)\" \
#             https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/releases/${VERSION}/assets/links ; \
#       done"

publish unity:
  stage: publish
  image: node:20-slim
  only:
    - tags
    - /.*publish$/
  needs:
    - build
  script:
    - tar xvfz Build/*.tgz
    - cd package
    - echo "registry=https://gitlab.com/api/v4/packages/npm/" >.npmrc
    - echo "//gitlab.com/api/v4/projects/${REGISTRY_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >>.npmrc
    - npm publish

publish generic:
  stage: publish
  needs:
    - build
  image: curlimages/curl:latest
  only:
    - tags
    - /.*publish$/
  script:
    - |
      packages_url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/unity-rti/${VERSION}"
      for file in Build/inhumate*.tgz ; do
        filename=$(basename "$file")
        curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "$file" "$packages_url/$filename"
      done

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags
  script:
    # NOTE: This fails if you first manually created a release in the Gitlab web app (sigh)
    # see https://gitlab.com/gitlab-org/release-cli/-/issues/94
    # On another NOTE: the links end up in the reverse order on the releases page.
    - |
      packages_url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/unity-rti/${VERSION}"
      release-cli create --name "Version $VERSION" --tag-name $VERSION \
        --assets-link "{\"name\":\"inhumate-unity-rti-${VERSION}.tgz\",\"url\":\"${packages_url}/inhumate-unity-rti-${VERSION}.tgz\"}" \
        ;
